{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.components.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["subColor","mainColor","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","otherProps","onChange","className","value","length","SignInContainer","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpContainer","SignInAndSignUpPage"],"mappings":"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","file":"static/js/7.8b4a2f44.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst subColor = \"grey\";\r\nconst mainColor = \"black\";\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n  input[type=\"password\"] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${mainColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel,\r\n} from \"./form-input.styles\";\r\n\r\n//we need handleChange because we want to bubble up any on change that\r\n//the input has\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...otherProps} />\r\n    {label ? (\r\n      <FormInputLabel className={`${otherProps.value.length ? \"shrink\" : \"\"}`}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\nexport default FormInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInContainer = styled.div`\r\n  width: 380px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 350px;\r\n  }\r\n`;\r\n\r\nexport const SignInTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const ButtonsBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.components\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  ButtonsBarContainer,\r\n} from \"./sign-in.styles\";\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <SignInTitle>I already have an account</SignInTitle>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          handleChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <ButtonsBarContainer>\r\n          <CustomButton type=\"submit\">Sign in</CustomButton>\r\n          <CustomButton\r\n            type=\"button\"\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            Sign in with Google\r\n          </CustomButton>\r\n        </ButtonsBarContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 350px;\r\n  }\r\n`;\r\n\r\nexport const SignUpTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.components\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have an account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label=\"Display Name\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label=\"Confirm Password\"\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\n  width: 850px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    width: unset;\r\n    align-items: center;\r\n    > *:first-child {\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport SignIn from \"../../components/sign-in/sign-in.component\";\r\nimport SignUp from \"../../components/sign-up/sign-up.component\";\r\n\r\nimport { SignInAndSignUpContainer } from \"./sign-in-and-sign-up.styles\";\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <SignInAndSignUpContainer>\r\n    <SignIn />\r\n    <SignUp />\r\n  </SignInAndSignUpContainer>\r\n);\r\nexport default SignInAndSignUpPage;\r\n"],"sourceRoot":""}